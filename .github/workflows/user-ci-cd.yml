name: User Lambdas CI/CD

on:
  workflow_dispatch:

  push:
    branches: [master]
    paths:
      - "src/user/**"

jobs:
  update_lambdas:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{secrets.AWS_REGION}}
      BUCKET_NAME: goorder-lambda-bucket

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Zip each Lambda
        run: |
          mkdir -p build
          for dir in src/user/*/ ; do
            lambda=$(basename "$dir")
            zip -j "build/$lambda.zip" "$dir"*
          done

      - name: Upload to S3
        run: |
          for zip in build/*.zip; do
            filename=$(basename "$zip")
            key="user/$filename"
            echo "Uploading $zip to s3://$BUCKET_NAME/$key"
            aws s3 cp "$zip" "s3://$BUCKET_NAME/$key"
          done

      - name: Update Lambda functions
        run: |
          declare -A FUNCTION_MAP=(
            [register]="goorder-user-register"
            [verify]="goorder-user-verify"
            [login]="goorder-user-login"
          )

          for zip in build/*.zip; do
            filename=$(basename "$zip")
            folder_name="${filename%.zip}"
            function_name="${FUNCTION_MAP[$folder_name]}"
            s3_key="user/$filename"

            if [ -z "$function_name" ]; then
              echo "No function mapping found for $folder_name. Skipping..."
              continue
            fi

            echo "Updating Lambda: $function_name from s3://$BUCKET_NAME/$s3_key"

            aws lambda update-function-code \
              --function-name "$function_name" \
              --s3-bucket "$BUCKET_NAME" \
              --s3-key "$s3_key" \
              --region "$AWS_REGION"
          done
